
user  www-data;
worker_processes  1;

#error_log  logs/error.log;
error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  text/html;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    lua_package_path "/home/dou/work/svn/nginx_module/durap/system/?.lua;;";

    encrypted_session_key "abcdefghijklmnopqrstuvwxyz123456";
    encrypted_session_iv "1234567812345678";
    encrypted_session_expires 30d;

    server {
        client_max_body_size 10m;
        listen       80;
        server_name  dou.com;

        #charset koi8-r;

        access_log  logs/dou.com.access.log  main;
        lua_code_cache off;

        location / {
            set $router_uri $uri;

            set $APPNAME "blog";
            set $ROOT "/home/dou/work/svn/nginx_module/durap/";
            content_by_lua_file '/home/dou/work/svn/nginx_module/durap/index.lua';
        }

        location ~^/(css|js|img|font|ckeditor|images) {
            root /home/dou/work/svn/nginx_module/durap/blog/static;
        }

        location =/favicon.ico {
            root .;
        }

    }

    server {
        listen       80;
        server_name  do.com;

        #charset koi8-r;

        access_log  logs/do.com.access.log  main;
        lua_code_cache off;

        location /demo1 {
            set_by_lua $router_uri "return string.sub(ngx.var.uri, 7)";

            set $APPNAME "demo1";
            set $ROOT "/home/dou/work/svn/nginx_module/durap/";
            content_by_lua_file '/home/dou/work/svn/nginx_module/durap/index.lua';
        }

        location =/favicon.ico {
            root .;
        }

    }

}
